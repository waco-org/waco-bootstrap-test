---
# Workstation as Code
# Copyright Nicola Musatti 2020.

- name: "Install Python {{ python_release }} from source"
  include_role:
    name: nmusatti.source_python
  vars:
    python_group: "{{ wapy_group }}"
    python_user: "{{ wapy_user }}"
    python_src_dir: "{{ wapy_build_root_dir }}/python"
    python_install_dir: "{{ wapy_install_root_dir }}"

- name: "Install pip for Python {{ python_release }}"
  include_role:
    name: bobbyrenwick.pip
  vars:
    python: "{{ wapy_install_root_dir }}/Python-{{ python_minor }}/bin/python{{ python_minor }}"
    pip: "{{ wapy_install_root_dir }}/Python-{{ python_minor }}/bin/pip{{ python_minor }}"
    pip_version: "{{ wapy_pip_version | default('') }}"

- name: "Install standard packages on Python {{ python_release }}"
  pip:
    name: "{{ wapy_source_packages }}"
    executable: "{{ wapy_install_root_dir }}/Python-{{ python_minor }}/bin/pip{{ python_minor }}"
    state: present
  become: true
  become_user: "{{ wapy_user }}"

- name: "Create base virtualenv directory for Python {{ python_release }}"
  file:
    dest: "{{ wapy_source_venv_root_dir }}/{{ wapy_source_venv_prefix }}-{{ python_minor }}"
    state: directory
    mode: 0755
    group: "{{ wapy_group }}"
    owner: "{{ wapy_user }}"
  become: true

- name: "Install the default virtualenv for Python {{ python_release }}"
  pip:
    name: "{{ wapy_source_venv_packages }}"
    virtualenv: "{{ wapy_source_venv_root_dir }}/{{ wapy_source_venv_prefix }}-{{ python_minor }}/{{ wapy_source_venv }}"
    virtualenv_command: "{{ wapy_install_root_dir }}/Python-{{ python_minor }}/bin/virtualenv"
    virtualenv_python: "{{ wapy_install_root_dir }}/Python-{{ python_minor }}/bin/python{{ python_minor }}"
  become: true
  become_user: "{{ wapy_user }}"

- name: "Register SELinux compatible release"
  set_fact:
    selinux_python_release: "{{ python_release }}"
  when: wapy_selinux_python_minor == python_minor

- name: "Register the most recent source release"
  set_fact:
    newest_python_release: "{{ python_release }}"
    newest_python_minor: "{{ python_release.split('.')[0] }}.{{ python_release.split('.')[1] }}"
  when: >
    newest_python_release is not defined or
    newest_python_release.split('.')[0] < python_release.split('.')[0] or (
    newest_python_release.split('.')[0] == python_release.split('.')[0] and
    newest_python_release.split('.')[1] < python_release.split('.')[1] )
