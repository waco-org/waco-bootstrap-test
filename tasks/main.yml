---
# Workstation as Code
# Copyright Nicola Musatti 2020.

- name: Create the Python installation group
  group:
    name: "{{ wapy_group }}"
  become: true

- name: Create the Python installation owner
  user:
    name: "{{ wapy_user }}"
    group: "{{ wapy_group }}"
  become: true

- name: Enable the EPEL repository
  include_role:
    name: geerlingguy.repo-epel
  when: wapy_platform != 'Fedora'

- name: Install system Python
  yum:
    name:
      - python2
      - python3
    state: present
  become: true

- name: "Install system Python dependencies on CentOS 8 and Fedora"
  dnf:
    name: "{{ wapy_system_python_deps }}"
    state: present
  become: true
  when: wapy_platform in ( 'CentOS8', 'Fedora' )

- name: "Install system Python dependencies on CentOS 7"
  yum:
    name: "{{ wapy_system_python_deps }}"
    state: present
  become: true
  when: wapy_platform == 'CentOS7'

- name: "Create root directory for default virtualenv's"
  file:
    dest: "{{ wapy_source_venv_root_dir }}"
    state: directory
    mode: 0755
  become: true

- name: Install source Python
  include_tasks: source-python.yml
  vars:
    python_release: "{{ item }}"
    python_minor: "{{ python_release.split('.')[0] }}.{{ python_release.split('.')[1] }}"
    python_path: "{{ wapy_source_python_root }}/Python-{{ python_minor }}/bin"
  loop: "{{ wapy_source_versions }}"

- name: "Register SELinux compatible source virtualenv tools"
  set_fact:
    selinux_virtualenv_dir: "{{ wapy_source_venv_root_dir }}/{{ wapy_source_venv_prefix }}-{{
    wapy_selinux_python_minor }}"
    selinux_virtualenv_command: "{{ wapy_install_root_dir }}/Python-{{
    wapy_selinux_python_minor }}/bin/virtualenv"
    selinux_virtualenv_python: "{{ wapy_install_root_dir }}/Python-{{
    wapy_selinux_python_minor }}/bin/python{{ wapy_selinux_python_minor }}"
  when: selinux_python_release is defined

- name: "Register SELinux compatible system virtualenv tools"
  set_fact:
    selinux_virtualenv_dir: "{{ wapy_system_venv_root_dir }}/{{ wapy_system_venv_prefix }}-{{
    wapy_selinux_python_minor }}"
    selinux_virtualenv_command: "/usr/bin/virtualenv{{
    ( wapy_platform == 'Fedora' ) | ternary ('', '-' + wapy_selinux_python_minor) }}"
    selinux_virtualenv_python: "/usr/bin/python{{ wapy_selinux_python_minor }}"
  when: selinux_python_release is not defined

- name: "Create root directory for system virtualenv's"
  file:
    dest: "{{ wapy_system_venv_root_dir }}"
    state: directory
    mode: 0755
  become: true
  when: ( wapy_has_ansible or wapy_has_mercurial or wapy_has_sphinx ) and selinux_python_release is not defined

- name: "Create base directory for system virtualenv's"
  file:
    dest: "{{ selinux_virtualenv_dir }}"
    state: directory
    mode: 0755
    group: "{{ wapy_group }}"
    owner: "{{ wapy_user }}"
  become: true
  when: ( wapy_has_ansible or wapy_has_mercurial or wapy_has_sphinx ) and selinux_python_release is not defined

- name: Install Ansible and Molecule in a virtualenv
  pip:
    name:
      - ansible
      - ansible-lint
      - flake8
      - molecule[docker]
      - pytest
      - selinux
      - testinfra
      - yamllint
    virtualenv: "{{ selinux_virtualenv_dir }}/ansible"
    virtualenv_command: "{{ selinux_virtualenv_command }}"
    virtualenv_python: "{{ selinux_virtualenv_python }}"
  become: true
  become_user: "{{ wapy_user }}"
  when: wapy_has_ansible

- name: Install Mercurial in virtualenv
  pip:
    name:
      - mercurial
      - selinux
    virtualenv: "{{ selinux_virtualenv_dir }}/hg"
    virtualenv_command: "{{ selinux_virtualenv_command }}"
    virtualenv_python: "{{ selinux_virtualenv_python }}"
  become: true
  become_user: "{{ wapy_user }}"
  when: wapy_has_mercurial

- name: "Register most recent source virtualenv tools"
  set_fact:
    newest_virtualenv_dir: "{{ wapy_source_venv_root_dir }}/{{ wapy_source_venv_prefix }}-{{
    newest_python_minor }}"
    newest_virtualenv_command: "{{ wapy_install_root_dir }}/Python-{{
    newest_python_minor }}/bin/virtualenv"
    newest_virtualenv_python: "{{ wapy_install_root_dir }}/Python-{{
    newest_python_minor }}/bin/python{{ newest_python_minor }}"
  when: newest_python_release is defined

- name: "Register most recent system virtualenv tools"
  set_fact:
    newest_virtualenv_dir: "{{ wapy_system_venv_root_dir }}/{{ wapy_system_venv_prefix }}-{{
    wapy_system_newest_minor }}"
    newest_virtualenv_command: "/usr/bin/virtualenv{{
    ( wapy_platform == 'Fedora' ) | ternary ('', '-' + wapy_system_newest_minor) }}"
    newest_virtualenv_python: "/usr/bin/python{{ wapy_system_newest_minor }}"
  when: newest_python_release is not defined

- name: Install Sphinx in a virtualenv
  pip:
    name: "{{ wapy_sphinx_packages }}"
    virtualenv: "{{ newest_virtualenv_dir }}/{{ wapy_sphinx_venv }}"
    virtualenv_command: "{{ newest_virtualenv_command }}"
    virtualenv_python: "{{ newest_virtualenv_python }}"
  become: true
  become_user: "{{ wapy_user }}"
  when: wapy_has_sphinx
